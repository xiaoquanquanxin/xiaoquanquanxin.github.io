{
    "title": "http基础",
    "description": "http基础",
    "sectionList": [
        {
            "title": "tcp与udp",
            "__html": "tcp需要连接\nudp无连接\n<br>\ntcp无差错，按序\nudp最大能力交互，不保证可靠\n<br>\ntcp面向字节流，把数据看成一连串无结构的数据\nudp面向报文，网络拥塞不会降低传输速率\n<br>\ntcp连接点对点\nudp支持多对多\n<br>\ntcp首部开销20字节\nudp首部开销8字节\n<br>\ntcp信道是可靠性道\nudp信道是不可靠性道"
        },
        {
            "title": "https",
            "__html": "<p>http是明文传输的过程，</p>\n<p>https是防止中间人窃取。在http和tcp之间做了加密和解密——ssl和tls</p>\n<p>三种加密方式：hash，对称加密，非对称加密</p>\n<p>hash：传秘钥用非对称加密，传数据用对称加密</p>\n<p>证书是一个验证链，私钥加密，公钥加密。</p>\n<p>对称加密，服务端和客户端们都用同一个秘钥，大家都一样，就相当于此地无银三百两了。所以可以通过协商的方式获取不同的秘钥，服务端和客户端A、B、C的秘钥都不一样。</p>\n<p>非对称加密：特点是私钥加密后的密文，只要是公钥，都可以解密，但是反过来公钥加密后的密文，只有私钥可以解密。私钥只有一个人有，而公钥可以发给所有的人。</p>\n<ol>\n    <li>公钥是开放给所有人的，但私钥是需要保密的，存在于服务端</li>\n    <li>服务器端server向client端（A、B.....）的信息传输是不安全的：因为所有人都可以获取公钥</li>\n    <li>但client端（A、B.....）向server端的信息传输确实安全的：因为私钥只有server端存在</li>\n</ol>"
        },
        {
            "title": "浏览器安全问题",
            "__html": "<ol>\n    <li>安全之本，同源策略</li>\n    <li>跨域</li>\n</ol>\n<h4 class=\"red\">xss,跨站脚本攻击</h4>\n<p>原理：在文档中插入一段js</p>\n<p>效果：窃取cookie、监听用户行为、在页面里生成广告、修改dom做假的登录dom结构。</p>\n<p>攻击方式</p>\n<ol>\n    <li>存储式攻击。往有漏洞的服务器里扔一段脚本。这是通过发送请求完成，比如提交表单，SQL注入，很少了。虎扑被攻击过。</li>\n    <li>反射型xss攻击。在连接里放恶意代码，然后发送请求，服务端返回页面，带着这个参数。对于开发者而言，使用这种机制非常方便，因为它允许他们从应用程序中调用一个定制的错误页面，而不需要对错误页面中的消息分别进行硬编码。</li>\n    <li>基于DOM。网络劫持，比如路由器，运营商劫持，往里面加恶意代码。</li>\n</ol>\n<p>组织xss攻击</p>\n<ol>\n    <li>过滤脚本</li>\n    <li class=\"red\">csp，服务端告诉浏览器允许加载那些域的js</li>\n    <li>httpOnly，js不能读cookie</li>\n</ol>\n<p class=\"red\">跨站请求伪造（英语：Cross-site request forgery）</p>\n<p>利用服务器漏洞和用户的登录状态攻击</p>\n<p>防止csrf攻击</p>\n<p>利用cookie的sameSite属性</p>\n<p>验证请求来源</p>\n<p>服务端token</p>"
        }
    ]
}
